# Deploy compute-container for each entry in config/user-containers.yml
- hosts: "{{ machines }}"
  become: yes
  become_user: root
  tasks: 
    - set_fact: process_index={{process_index|default(0)}}
    - set_fact: process_total={{process_total|default(1)}}    
    
    - name: Select containers for deployment
      vars: 
        container: "{{ deployment_users[container_iter.USER_EMAIL] | default({}) | combine(container_iter) }}"
      set_fact: 
        selected_deployment_containers: "{{ selected_deployment_containers|default([]) + [ container ] }}"
      with_items: "{{ deployment_containers }}"
      loop_control: 
        loop_var: container_iter
      when:
         (containers is not defined and users is not defined) or
         (containers is defined and container_iter.STACK_NAME in containers.split(",")) or
         (users is defined and deployment_users[container_iter.USER_EMAIL].USER_EMAIL in users.split(","))

    - set_fact: ERROR_LIST={{ [] }}
    
    - name: Deploy selcted containers based on processing index
      vars: 
        container: "{{ container_iter }}"
      include_role: name=compute-container
      with_items: "{{ selected_deployment_containers }}"
      loop_control: 
        loop_var: container_iter
        index_var: iter
      when: "{{ iter|int % process_total|int == process_index|int }}"
      
    - ansible.builtin.fail:
        msg:  "Unable to complete deplyment for '{{ item.name }}' on '{{ item.hostname }}' due to error in '{{ item.task_name }}' ({{ item.task_action }}): {{ item.error }}"
      with_items: "{{ ERROR_LIST }}"
      ignore_errors: yes
      loop_control:
        label: "{{ item.name }}"
      
    - ansible.builtin.fail:
        msg: "FAILED on {{ ERROR_LIST|length }} containers: {{ ERROR_LIST|map(attribute='name')|list| join(',') }}"
      when: ERROR_LIST|length > 0