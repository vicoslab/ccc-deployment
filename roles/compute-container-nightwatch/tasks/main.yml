- name: install ansible-pull using needed for container nightwatcher
  pip: name=ansible

- name: ensure /etc/ansible/ exists
  file: path=/etc/ansible state=directory

- name: copy inventory files into /etc/ansible/hosts
  copy: src={{inventory_file}} dest=/etc/ansible/hosts

- name: set ansible_pull_url
  set_fact:
    ansible_pull_url: "{{ compute_container_nightwatch_git_url|regex_replace('(://)', '://' + compute_container_nightwatch_secure.git_token|default('') + '@')|regex_replace('(://@)', '://') }}"
  
- name: install nightwatcher script
  template: src=container-nightwatch.sh.j2 dest=/usr/local/bin/container-nightwatch.sh mode='u+x,o-rwx,g-rwx' owner={{ansible_user}} group={{ansible_user}}
  vars:
    watched_folders: "{{mount_points.nfs.user_data}}"
    watched_folders_pattern: "*/container-settings/*.yml"
    watched_folders_max_depth: 3
    ansible_pull_url: "{{ ansible_pull_url }}"
    ansible_pull_branch: "{{ compute_container_nightwatch_git_branch }}"
    ansible_pull_inventory_dir: "{{ compute_container_nightwatch_git_intentory_dir }}"
    ansible_pull_playbook: "{{ compute_container_nightwatch_git_playbook_dir }}/containers-deploy.yml"
  when: compute_container_nightwatch|bool
  register: nightwatcher_install

- name: install container-nightwatch.service
  template: src=container-nightwatch.service.j2 dest=/etc/systemd/system/container-nightwatch.service
  vars:
    container_nightwatch_bin: /usr/local/bin/container-nightwatch.sh
  when: compute_container_nightwatch|bool
  register: nightwatcher_service_install
  
- name: start container-nightwatch.service
  systemd:     
    daemon_reload: "{{ 'yes' if nightwatcher_install.changed or nightwatcher_service_install.changed else 'no' }}"
    name: container-nightwatch.service
    enabled: yes
    state: "{{ 'restarted' if nightwatcher_install.changed or nightwatcher_service_install.changed else 'started' }}"
  when: compute_container_nightwatch|bool
